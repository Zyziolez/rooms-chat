import React,{ useEffect, useRef, useState } from 'react'
import Peer from 'peerjs'

var peer = new Peer(undefined, {
    path: "/peerjs",
    host: "http://localhost:5000/",
    port: "5000",
  });

  const ThatVideoThing = ({videoSrc, videoRef}) => {
      return(
          <video src={videoSrc} autoPlay={true} muted={true} ref={videoRef} width='340px' height='180px'  />
      )
  }
  
  export default function Test() {
    let videoSource = null;
    const videoRef = useRef(null)
    let [rray, setSrray] = useState([])
    navigator.getUserMedia = (navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);
    const me = new Peer({key: Math.floor(Math.random() * 10)})
    const outgoing = me.call(peerId, myStream)

    me.on('open', () => {
        console.log(`My id is: ${me.id}`)
    })
    outgoing.on('stream', (stream) => {

    })
    navigator.getUserMedia({
        video: true,
        audio: true
    },
        function success(localStream){

        },
        function error(err){

        }
        )
        me.on('call', (incoming) => {
            incoming.on('stream', (stream) => {
                
            })
        })
        const playStream = (stream) => {
            
        }
    const handleClick = () => {
        setSrray(e => [...e, 'hej'])
    }


      return (
          <div>
              <button onClick={ handleClick} >spawn this shit</button>
            {rray.map((k, i) => 
                <ThatVideoThing videoSrc={videoSource} videoRef={videoRef} key={i} />
                )}
          </div>
      )
  }
  