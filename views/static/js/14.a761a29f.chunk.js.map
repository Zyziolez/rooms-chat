{"version":3,"sources":["mobile/other/MRoomList.js","mobile/other/MSearch.js","mobile/MMain.js"],"names":["MRoomList","rooms","connect","useState","className","map","room","i","onClick","e","style","textAlign","userSelect","openSocket","window","location","href","secure","MSearch","value","setValue","redirect","setRedirect","notFocus","type","maxLength","placeholder","onChange","target","autoCapitalize","onKeyPress","key","toLowerCase","to","socket","origin","MMain","setRooms","filteredRooms","filter","isBigEnough","useEffect","Promise","res","rej","on","msg","id"],"mappings":"yKAEe,SAASA,EAAT,GAAsC,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,QAAU,EACZC,oBAAS,GADG,6BAEhD,OACI,qBAAKC,UAAU,aAAf,SACI,gCACI,kCACA,+BACA,sCACA,sCACA,uCACA,0BAECH,EAAMI,KAAI,SAACC,EAAMC,GAAP,OACP,qBAAYC,QAAS,SAACC,GAAD,OAAOP,EAAQI,EAAK,KAAzC,UACI,6BAAKA,EAAK,KACV,oBAAII,MAAO,CAACC,UAAW,SAAUC,WAAY,OAA7C,SAAuDN,EAAK,KAC5D,qBAAII,MAAO,CAACC,UAAW,UAAvB,cAAqCL,EAAK,GAA1C,MAAiDA,EAAK,GAAtD,OAEA,wBAAQE,QAAS,SAACC,GAAD,OAAOP,EAAQI,EAAK,KAArC,oBALKC,a,4BCXdM,IAAWC,OAAOC,SAASC,KAAM,CAACC,QAAQ,IAE1C,SAASC,IAAW,IAAD,EACJf,mBAAS,IADL,mBACvBgB,EADuB,KAChBC,EADgB,OAEEjB,oBAAS,GAFX,mBAEvBkB,EAFuB,KAEbC,EAFa,OAGEnB,mBAAS,kBAHX,mBAGvBoB,EAHuB,UAiB9B,OACI,sBAAKnB,UAAU,SAAf,UACI,uBAAOoB,KAAK,OAAOC,UAAU,IAAIC,YAAaH,EAAUJ,MAAOA,EAAOQ,SAAU,SAAAlB,GAAC,OAAIW,EAASX,EAAEmB,OAAOT,QAAQU,eAAe,OAAOC,WAPzH,SAACrB,GACJ,UAAVA,EAAEsB,KAPS,KAAVZ,IACAC,EAASD,EAAMa,eACfV,GAAY,OAYZ,sCACCD,EAAW,cAAC,IAAD,CAAUY,GAAE,gBAAWd,KAAc,Q,mBCpBvDe,EAASrB,IAAWC,OAAOC,SAASoB,OAAQ,CAAClB,QAAQ,IAE5C,SAASmB,IAAS,IAAD,EACFjC,mBAAS,IADP,mBACrBF,EADqB,KACdoC,EADc,OAEIlC,mBAAS,EAAC,EAAO,KAFrB,mBAErBkB,EAFqB,KAEXC,EAFW,KAGtBgB,EAAgBrC,EAAMsC,OAAOC,KAGlCC,qBAAU,WACS,IAAIC,SAAQ,SAACC,EAAKC,GAC9BD,EAAKT,EAAOW,GAAG,iBAAiB,SAAAC,GAClB,MAAPA,GACCT,EAASS,UAKrB,OAAM,WACFT,EAAS,IACTf,EAAY,EAAC,EAAO,QAEzB,IAMH,OAEI,sBAAKlB,UAAU,YAAf,UACI,cAACc,EAAD,IACA,sHACA,cAAClB,EAAD,CAAWC,MAAOqC,EAAepC,QATzB,SAAC6C,GACTzB,EAAY,EAAC,EAAMyB,OASnB,eAAC,IAAD,CAAMd,GAAG,UAAT,cAAqB,qBAAK7B,UAAU,gBAAf,2BAArB,OAECiB,EAAS,GAAK,cAAC,IAAD,CAAUY,GAAE,gBAAWZ,EAAS,MAAU","file":"static/js/14.a761a29f.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nexport default function MRoomList({rooms, connect}) {\n    const [isDisabled, setIsDisabled] = useState(false)\n    return (\n        <div className='rooms-list' >\n            <table>\n                <tbody>\n                <tr>\n                <th>Name</th>\n                <th>Code</th>\n                <th>Limit</th>\n                <th></th>\n            </tr>\n                {rooms.map((room, i) => \n                    <tr key={i} onClick={(e) => connect(room[3])}  >\n                        <td>{room[0]}</td>\n                        <td style={{textAlign: 'center', userSelect: 'all'}} >{room[3]}</td>\n                        <td style={{textAlign: 'center'}} > {room[2]} / {room[4]} </td>\n\n                        <button onClick={(e) => connect(room[3])} >Join</button>\n                    </tr>\n                )}\n                </tbody>\n            </table>\n           \n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport openSocket from 'socket.io-client'\n\nconst socket = openSocket(window.location.href, {secure: true});\n\nexport default function MSearch() {\n    const [value, setValue] = useState('')\n    const [redirect, setRedirect] = useState(false)\n    const [notFocus, setNotFocus] = useState('Search by Code')\n\n    const handleClick = () => {\n        if( value !== '' ){\n            setValue(value.toLowerCase())\n            setRedirect(true)\n        }\n        \n    }\n    const enterHandle = (e) => {\n        if(e.key === \"Enter\"){\n            handleClick()\n        }\n    }\n    return (\n        <div className='m-main' >\n            <input type='text' maxLength='8' placeholder={notFocus} value={value} onChange={e => setValue(e.target.value)} autoCapitalize='none' onKeyPress={enterHandle}  />\n            <label>|</label>\n            {redirect ? <Redirect to={`/room/${value}`}  />: null}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport MRoomList from './other/MRoomList'\nimport MSearch from './other/MSearch'\nimport {isBigEnough} from './../components/other/functions';\nimport openSocket from 'socket.io-client'\nimport { Link, Redirect } from 'react-router-dom'\n\nconst socket = openSocket(window.location.origin, {secure: true});\n\nexport default function MMain() {\n    const [rooms, setRooms] = useState([])\n    const [redirect, setRedirect] = useState([false, ''])\n    const filteredRooms = rooms.filter(isBigEnough)\n\n\n     useEffect(() => {\n        const promise = new Promise((res, rej) => {\n            res( socket.on('display-rooms', msg => {\n                if(msg != null){\n                    setRooms(msg)\n                }\n            })  )\n        })\n\n        return() => {\n            setRooms([])\n            setRedirect([false, ''])\n        }\n    }, [ ])\n\n    const connect = (id) => {\n            setRedirect([true, id])\n    }\n\n    return (\n        \n        <div className='main-page' >\n            <MSearch/>\n            <p> You can easily enter a Room just by typing its code or choosing from the list below </p>\n            <MRoomList rooms={filteredRooms} connect={connect} />\n            <Link to='/create' > <div className='create-m-main' >Create a Room</div> </Link>\n\n           { redirect[0] ? <Redirect to={`/room/${redirect[1]}`}/> : null}\n        </div>\n    )\n}\n"],"sourceRoot":""}