{"version":3,"sources":["components/other/UltimatePop.js","components/video stuff/Chat&Users.js","../node_modules/peerjs/dist sync","mobile/MMenu.js","mobile/MRoom.js"],"names":["Input","isOpen","children","onClose","enabled","ReactDOM","createPortal","style","height","background","width","position","top","document","body","UltimatePop","open","text","setOpen","useState","setEnabled","useEffect","setTimeout","marginTop","marginLeft","transform","textAlign","padding","Chat","chat","newChat","slice","refer","useRef","current","scrollIntoView","behavior","block","className","overflow","length","map","message","i","ref","Users","users","Array","isArray","user","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","PortalMenu","isOpened","klassName","ready","MMenu","opened","setOpened","curr","setCurr","setReady","closeMenu","prev","border","color","right","fontSize","fontWeight","onClick","to","display","href","target","socket","openSocket","window","location","origin","secure","MRoom","setChat","goHome","setGoHome","setUsers","roomsName","setRoomsName","chatMessage","setChatMessage","maxUsers","setMaxUsers","ids","inputFocus","useRecoilState","pop","menuOpen","currId","replace","peer","Peer","localStorage","getItem","idsCopy","notMineDontTouch","emit","push","on","conn","console","log","data","connect","send","mess","name","msg","info","secret","reload","alert","handleSendMessage","focus","reportRoom","disconnect","type","maxLength","value","onKeyPress","key","onChange"],"mappings":"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","file":"static/js/5.5bed4753.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ReactDOM from 'react-dom'\n\n//this component is the window that pops up when you haven't got you nick set\n\n//this is the window\nconst Input = ({isOpen, onClose, children, enabled}) => {\n    if(!isOpen ){\n        return null\n    }\n    return ReactDOM.createPortal(\n        <div  style={{height: '100vh', background: 'rgba(20, 20, 20, 0.677)', width: '100vw', position: 'fixed', top: '0'}} >\n            {children}\n        </div>, document.body\n    )\n}\n\n//this is the logic of the window\nexport default function UltimatePop({open, setOpen, text}) {\n    const [enabled, setEnabled] = useState(true)\n    useEffect(() => {\n        setTimeout(() => {\n            setEnabled(false)\n        }, 2000)\n    }, [])\n    return (\n        <div>\n            <Input isOpen={open}  enabled={enabled}  >\n            <div style={{ width: '25rem', background: 'white', position: 'absolute',height: '30rem', marginTop: '20vh', marginLeft:'50%', transform: 'translateX(-50%)', textAlign: 'center', padding: '2rem'}} >\n                <h1>{text} </h1>\n             </div>\n           </Input>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\n\n//yes I will comment every component\n\nexport function Chat({chat}) { \n    const newChat = chat.slice(0)   \n    const refer = useRef()\n    // const newerChat = newChat.reverse()\n    useEffect(() => {\n        refer.current.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start'\n        })\n    }, [chat])\n    return (\n        <div className='chat-list' >\n            <ul style={{overflow: 'hidden'}} >\n                {newChat.length > 0 ? newChat.map((message, i) => \n                <li key={i} > <b>{`${message[0]}:`}</b>  {`${message[1]}`} </li>\n                ) : null}\n                <div ref={refer} ></div>\n            </ul>\n        </div>\n    )\n}\nexport function Users({users}){\n    return(\n        <ul>\n        { Array.isArray(users) ? users.map((user, i) => \n            <li key={i} > {user} </li>\n         ) : null}\n    </ul>\n    )\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 105;","import React, {useEffect, useState} from 'react'\nimport ReactDOM from 'react-dom'\nimport { Link } from 'react-router-dom'\n\n\nconst PortalMenu = ({isOpened,  children, ready, klassName}) => {\n   \n    if(!isOpened){\n        return null;\n    }\n\n\n    return ReactDOM.createPortal(\n            <div className={klassName} style={{height: '100vh', background: '#34ef', width: '100vw', position: 'fixed', top: '0'}} >\n                {children}\n            </div>\n\n                , document.body\n    )\n}\n\nexport default function MMenu({opened, setOpened, text}) {\n    const [curr, setCurr] = useState( 'pop-menu' )\n  const [ready, setReady] = useState(false)\n  \n  const closeMenu = () => {\n      setReady(true)\n      setCurr('pop-test')\n      setTimeout(() => {\n        setOpened(prev => !prev)\n        setCurr('pop-menu')\n      }, 1000)\n  }\n    return (\n            <PortalMenu isOpened={opened} ready={ready} klassName={curr} >\n                <button style={{border: 'none', background: 'transparent', color: 'white',position: 'absolute', right: '2rem', top: '1rem', fontSize: '3rem', fontWeight:'800', transform: 'rotate(90deg)'}}  className='menu-btn' onClick={closeMenu}  > ||| </button>\n                <div className='m-menu' >\n                    <Link to='/'> <button onClick={closeMenu} style={{display: 'block'}} >Home</button> </Link>\n                    <button  onClick={closeMenu} style={{display: 'block'}} > <a> Change Nickname </a> </button>\n                    <Link to='/news'> <button  onClick={closeMenu} style={{display: 'block'}} > News </button> </Link>\n                    <button  onClick={closeMenu} style={{display: 'block'}} > <a href='https://discord.gg/37xBPH5Ec4' target='blank' > Discord </a> </button>\n                    <button  onClick={closeMenu} style={{display: 'block'}} > <a href='https://patreon.com/roomschat' target='blank' > Donate </a> </button>\n                    <Link to='/create' >  <button onClick={closeMenu} style={{display: 'block'}} >Create Room</button> </Link>\n                </div>\n            </PortalMenu>\n    )\n}\n","import React, { useEffect, useState, useRef } from 'react'\nimport openSocket from 'socket.io-client'\nimport { Redirect } from 'react-router-dom';\nimport Peer from 'peerjs';\nimport {Chat, Users} from './../components/video stuff/Chat&Users'\nimport { notMineDontTouch, reportRoom } from './../components/other/functions';\nimport {pop} from './../index'\nimport {useRecoilState} from 'recoil'\nimport UltimatePop from './../components/other/UltimatePop';\nimport {menuOpen} from './../index'\nimport MMenu from './MMenu'\n\nconst socket = openSocket(window.location.origin, {secure: true});\n\n//this code is nasty so get ready\n\nexport default function MRoom() {\n    const [chat, setChat] = useState([])\n    const [goHome, setGoHome] = useState(false)\n    const [users, setUsers] = useState([])\n    const [roomsName, setRoomsName] = useState('')\n    const [chatMessage, setChatMessage] = useState('')\n    const [maxUsers, setMaxUsers] = useState(0)\n    let ids = [];\n    const inputFocus = useRef(null)\n    const [open, setOpen] = useRecoilState(pop)\n    const [opened, setOpened] = useRecoilState(menuOpen)\n\n    //sends this rooms id from link to backend to recognize it\n    let currId = window.location.href\n    currId = currId.replace('https://itinit.pl/room/', '')\n\n    const peer = new Peer(localStorage.getItem('nick-id'))\n   \n    let idsCopy = [...ids]\n    let arra = notMineDontTouch(idsCopy, localStorage.getItem('nick-id'))\n\n\n    useEffect(() => {\n        // localStorage.setItem('location', window.location.pathname)\n\n        //sends every time request to join the room (i should change that) *!*\n        socket.emit('join-user', currId, localStorage.getItem('nick'), localStorage.getItem('nick-id'))\n\n        //adds our peers id to array to connect to others and also sends it to backend\n        ids.push(peer.id)\n        socket.emit('rooms-ids', currId, localStorage.getItem('nick-id'))\n\n        //peers stuff, stil a lot work to do\n        peer.on('connection', (conn) => {\n            console.log('connected')\n            conn.on('data', (data) => {\n              const con = peer.connect(data)\n              con.send('hejka')\n              console.log(data)\n            });\n            conn.on('open', (mess) => {\n              conn.send('hello!');\n              console.log(mess)\n            });\n          });\n\n          \n        //sets messages to chat\n        socket.on('chat', (name, msg)=> {\n            if(msg != null){\n                setChat(prev => [...prev, [name, msg]])\n            }else{\n                console.log('wtf')\n            }  \n        })\n\n        //i know this part is trashy. Socket on the backend sends multiple messages and this shit recognizes it\n        socket.on('admin', (info, secret) => {\n            if(info == 'kick'){\n                setOpen(true)\n                setTimeout(() => {\n                    setOpen(false)\n                    setGoHome(true)\n                    window.location.reload()\n                }, 2000)\n                \n            }else if(info == 'users'){\n                setUsers(secret[0])\n                setMaxUsers(secret[1])\n            }else if(info == 'max-reached'){\n                alert(`Max number of guests reached!`)\n                setGoHome(true)\n                window.location.reload()\n            }else if(info === \"r-name\"){\n                setRoomsName(secret)\n             }else if(info === \"disc\"){\n                 window.location.reload()\n             }\n        })\n\n        //that should be a cleanup but idk\n        return () => {\n            setChat([])\n            setUsers([])\n            window.location.reload()\n        }\n    }, [])\n\n        const returnHomeAndDisconnect = () => {\n            socket.disconnect()\n            setGoHome(true)\n        }\n        const handleSendMessage =() => {\n            if(chatMessage != ''){\n                socket.emit('chat', chatMessage, localStorage.getItem('nick'))\n                setChatMessage('')\n                inputFocus.current.focus()\n            }\n        }\n\n        const enterHandle = (e) => {\n            if(e.key === \"Enter\"){\n                handleSendMessage()\n            }\n        }\n\n    return (\n        <div className='m-room' >\n            <UltimatePop open={open} setOpen={setOpen} text={`Could not find room with id: ${currId}`} />\n\n            <div className='m-r-up' >\n                <h1>Rooms name: {roomsName}</h1>\n                <h3> {users.length}/{maxUsers} users</h3>\n                <Users users={users} />\n                <button onClick={e => {\n                    reportRoom(currId) \n                    returnHomeAndDisconnect()\n                } } >Report this Room</button>\n            </div>\n\n            <div className='m-r-down' >\n                <Chat chat={chat} />\n                <input type='text' ref={inputFocus} maxLength='150' value={chatMessage} onKeyPress={enterHandle} onChange={e => setChatMessage(e.target.value)} />\n                <button onClick={handleSendMessage} className='message-btn' >Send</button>\n            </div>\n\n            \n            <MMenu opened={opened} setOpened={setOpened} />\n            {goHome ? <Redirect to='/'/>  : null}\n\n        </div>\n    )\n    \n}\n"],"sourceRoot":""}