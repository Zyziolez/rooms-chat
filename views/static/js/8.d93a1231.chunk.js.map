{"version":3,"sources":["components/other/UltimatePop.js","../node_modules/generate-unique-id/index.js","mobile/MCreate.js"],"names":["Input","isOpen","children","onClose","enabled","ReactDOM","createPortal","style","height","background","width","position","top","document","body","UltimatePop","open","text","setOpen","useState","setEnabled","useEffect","setTimeout","marginTop","marginLeft","transform","textAlign","padding","filterSymbols","excludeSymbols","group","newGroup","forEach","symbol","replace","createId","availableChars","idLength","limit","id","i","length","Math","floor","random","toString","module","exports","useLetters","useNumbers","includeSymbols","letters","numbers","lettersArr","numbersArr","split","socket","openSocket","window","location","origin","secure","MCreate","name","setName","description","setDescription","hidden","setHidden","select","setSelect","redirect","setRedirect","generated","setGenerated","useRecoilState","pop","generator","generateUniqueId","className","placeholder","type","maxLength","value","onChange","e","target","border","onClick","emit","to"],"mappings":"4KAMMA,EAAQ,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,OAAiBC,GAAuB,EAAhCC,QAAgC,EAAvBD,UAAuB,EAAbE,QACvC,OAAIH,EAGGI,IAASC,aACZ,qBAAMC,MAAO,CAACC,OAAQ,QAASC,WAAY,0BAA2BC,MAAO,QAASC,SAAU,QAASC,IAAK,KAA9G,SACKV,IACGW,SAASC,MALV,MAUA,SAASC,EAAT,GAA6C,IAAvBC,EAAsB,EAAtBA,KAAeC,GAAO,EAAhBC,QAAgB,EAAPD,MAAO,EACzBE,oBAAS,GADgB,mBAChDf,EADgD,KACvCgB,EADuC,KAOvD,OALAC,qBAAU,WACNC,YAAW,WACPF,GAAW,KACZ,OACJ,IAEC,8BACI,cAACpB,EAAD,CAAOC,OAAQe,EAAOZ,QAASA,EAA/B,SACA,qBAAKG,MAAO,CAAEG,MAAO,QAASD,WAAY,QAASE,SAAU,WAAWH,OAAQ,QAASe,UAAW,OAAQC,WAAW,MAAOC,UAAW,mBAAoBC,UAAW,SAAUC,QAAS,QAA3L,SACI,+BAAKV,EAAL,e,gCCzBhB,SAASW,EAAcC,EAAgBC,GACrC,IAAIC,EAAWD,EAKf,OAJAD,EAAeG,SAAQ,SAACC,GACtBF,EAAWA,EAASG,QAAQD,EAAQ,OAG/BF,EAGT,SAASI,EAASC,EAAgBC,GAGhC,IAFA,IAduBC,EAcnBC,EAAK,GAEAC,EAAI,EAAGA,EAAIH,EAAUG,GAAK,EACjCD,GAAMH,GAjBeE,EAiBgBF,EAAeK,OAhB/CC,KAAKC,MAAMD,KAAKE,SAAWN,GAAOO,aAmBzC,OAAON,EA+BTO,EAAOC,QA5BP,WAMQ,6DAAJ,GAAI,IALNN,cAKM,MALG,GAKH,MAJNO,kBAIM,aAHNC,kBAGM,aAFNC,sBAEM,MAFW,GAEX,MADNrB,sBACM,MADW,GACX,EACFsB,EAAU,6BACVC,EAAU,aAEVC,EAAa,GACbC,EAAa,GAcjB,OAZIN,IACEnB,EAAeY,SAAQU,EAAUvB,EAAcC,EAAgBsB,IACnEE,EAAaF,EAAQI,MAAM,KAGzBN,IACEpB,EAAeY,SAAQW,EAAUxB,EAAcC,EAAgBuB,IACnEE,EAAaF,EAAQG,MAAM,KAKtBpB,EAFU,GAAH,SAAOkB,GAAP,EAAsBC,GAAtB,EAAqCJ,IAEnBT,K,2KCxC5Be,EAASC,IAAWC,OAAOC,SAASC,OAAQ,CAACC,QAAQ,IAE5C,SAASC,IAAW,IAAD,EACN3C,mBAAS,IADH,mBACvB4C,EADuB,KACjBC,EADiB,OAEQ7C,mBAAS,IAFjB,mBAEvB8C,EAFuB,KAEVC,EAFU,OAGF/C,oBAAS,GAHP,mBAGvBgD,EAHuB,KAGfC,EAHe,OAIFjD,mBAAS,GAJP,mBAIvBkD,EAJuB,KAIfC,EAJe,OAKCnD,oBAAS,GALV,mBAKvBoD,EALuB,KAKbC,EALa,OAMIrD,mBAAS,MANb,mBAMvBsD,EANuB,KAMZC,EANY,OAONC,YAAeC,OAPT,mBAOvB5D,EAPuB,KAOjBE,EAPiB,KAQxB2D,EAAYC,IAAiB,CAC/BrC,OAAQ,IAEZpB,qBAAU,WAENqD,EAAaG,KACd,IAcH,OACI,sBAAME,UAAU,SAAhB,UACI,cAAC,IAAD,CAAa/D,KAAMA,EAAME,QAASA,EAASD,KAAK,kCAC5C,6CACC,uBAAO+D,YAAY,OAAOC,KAAK,OAAOC,UAAU,KAAKnB,KAAK,OAAOoB,MAAOpB,EAAMqB,SAAU,SAAAC,GAAC,OAAIrB,EAAQqB,EAAEC,OAAOH,UAHvH,IAGkI,uBAC1H,uBAAOH,YAAY,yBAAyBC,KAAK,OAAOC,UAAU,KAAKnB,KAAK,cAAcoB,MAAOlB,EAAamB,SAAU,SAAAC,GAAC,OAAInB,EAAemB,EAAEC,OAAOH,UAJ7J,IAIwK,uBAC5J,sDALZ,IAK6C,yBAAUA,MAAOd,EAAQe,SAAU,SAAAC,GAAC,OAAIf,EAAUe,EAAEC,OAAOH,QAAS5E,MAAO,CAACgF,OAAQ,iBAAkB7E,MAAO,QAA7G,UACjC,uCACA,uCACA,uCACA,uCACA,uCACA,0CAXZ,IAYkB,uBACV,wDAbR,IAa6C,uBAAOuE,KAAK,WAAWE,MAAOhB,EAAQiB,SAAU,SAAAC,GAAC,OAAGjB,GAAWD,IAAUY,UAAU,QAbhI,IAayI,uBAAS,uBAC1I,uBAAS,uBACT,wBAAQE,KAAK,SAASO,QA7Bb,WACL,IAARzB,GAEAP,EAAOiC,KAAK,SAAShB,EAAYV,EAAOE,EAAaI,EAAQF,GAC7DK,GAAY,KAEZtD,GAAQ,GACRI,YAAW,WACPJ,GAAQ,KACT,OAoBC,sBAEHqD,EAAY,cAAC,IAAD,CAAUmB,GAAE,gBAAWjB,KAAmB","file":"static/js/8.d93a1231.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ReactDOM from 'react-dom'\n\n//this component is the window that pops up when you haven't got you nick set\n\n//this is the window\nconst Input = ({isOpen, onClose, children, enabled}) => {\n    if(!isOpen ){\n        return null\n    }\n    return ReactDOM.createPortal(\n        <div  style={{height: '100vh', background: 'rgba(20, 20, 20, 0.677)', width: '100vw', position: 'fixed', top: '0'}} >\n            {children}\n        </div>, document.body\n    )\n}\n\n//this is the logic of the window\nexport default function UltimatePop({open, setOpen, text}) {\n    const [enabled, setEnabled] = useState(true)\n    useEffect(() => {\n        setTimeout(() => {\n            setEnabled(false)\n        }, 2000)\n    }, [])\n    return (\n        <div>\n            <Input isOpen={open}  enabled={enabled}  >\n            <div style={{ width: '25rem', background: 'white', position: 'absolute',height: '30rem', marginTop: '20vh', marginLeft:'50%', transform: 'translateX(-50%)', textAlign: 'center', padding: '2rem'}} >\n                <h1>{text} </h1>\n             </div>\n           </Input>\n        </div>\n    )\n}\n","function getRandomNumber(limit) {\n  return Math.floor(Math.random() * limit).toString();\n}\n\nfunction filterSymbols(excludeSymbols, group) {\n  let newGroup = group;\n  excludeSymbols.forEach((symbol) => {\n    newGroup = newGroup.replace(symbol, '');\n  });\n\n  return newGroup;\n}\n\nfunction createId(availableChars, idLength) {\n  let id = '';\n\n  for (let i = 0; i < idLength; i += 1) {\n    id += availableChars[getRandomNumber(availableChars.length)];\n  }\n\n  return id;\n}\n\nfunction generateUniqueId({\n  length = 20,\n  useLetters = true,\n  useNumbers = true,\n  includeSymbols = [],\n  excludeSymbols = [],\n} = {}) {\n  let letters = 'abcdefghijklmnopqrstuvwxyz';\n  let numbers = '0123456789';\n  let availableChars = [];\n  let lettersArr = [];\n  let numbersArr = [];\n\n  if (useLetters) {\n    if (excludeSymbols.length) letters = filterSymbols(excludeSymbols, letters);\n    lettersArr = letters.split('');\n  }\n\n  if (useNumbers) {\n    if (excludeSymbols.length) numbers = filterSymbols(excludeSymbols, numbers);\n    numbersArr = numbers.split('');\n  }\n\n  availableChars = [...lettersArr, ...numbersArr, ...includeSymbols];\n\n  return createId(availableChars, length);\n}\n\nmodule.exports = generateUniqueId;\n","import React, { useEffect, useState } from 'react'\nimport openSocket from 'socket.io-client'\nimport generateUniqueId from 'generate-unique-id'\nimport { Redirect } from 'react-router-dom';\nimport { pop } from './../index';\nimport UltimatePop from './../components/other/UltimatePop'\nimport {useRecoilState} from 'recoil'\n\nconst socket = openSocket(window.location.origin, {secure: true});\n\nexport default function MCreate() {\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('') \n    const [hidden, setHidden] = useState(false) \n    const [select, setSelect] = useState(2) \n    const [redirect, setRedirect]= useState(false)\n    const [generated, setGenerated] = useState(null)\n    const [open, setOpen] = useRecoilState(pop)\n    const generator = generateUniqueId({\n        length: 8\n    })\n    useEffect(() => {\n        //set generated rooms id\n        setGenerated(generator)\n    }, [])\n    const handleSubmit = () => {\n        if( name != ''){\n            //sends rooms info to backend\n            socket.emit('create',generated , name,  description, select, hidden)\n            setRedirect(true)\n        }else{\n            setOpen(true)\n            setTimeout(() => {\n                setOpen(false)\n            }, 2000)\n        }\n    }\n\n    return (\n        <div  className='create' >\n            <UltimatePop open={open} setOpen={setOpen} text='Please fill form correctly :)' />\n                <h1>Create Room</h1>\n                 <input placeholder='Name' type='text' maxLength='20' name='name' value={name} onChange={e => setName(e.target.value)} /> <br></br>\n                <input placeholder='Description (optional)' type='text' maxLength='40' name='description' value={description} onChange={e => setDescription(e.target.value)} /> <br></br>\n                    <label>Number of guests:</label> <select   value={select} onChange={e => setSelect(e.target.value)}  style={{border: '1px solid gray', width: '3rem'}} >\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                    <option>6</option>\n                    <option>7</option>\n                </select> <br></br>\n                <label  > Hidden (optional) </label> <input type=\"checkbox\" value={hidden} onChange={e=> setHidden(!hidden) } className='che' /> <br></br><br></br>\n                <br></br><br></br>\n                <button type='submit' onClick={ handleSubmit } > Submit </button>\n         \n            {redirect ?  <Redirect to={`/room/${generated}`} />  : null}\n        </div>\n    )\n}\n"],"sourceRoot":""}